//------------------------------------------------------------------------------
// Container
//------------------------------------------------------------------------------

.Container {
	--page-margin: var(--container-page-margin);
	margin: 0 auto;
	padding: 0 var(--page-margin);
}

.Container .Container {
	padding: 0;
}

@media screen and (max-width: 1400px) {
	:root {
		--container-page-margin: var(--grid-gutter);
	}
}

@media screen and (max-width: $breakpoint-mobile) {
	:root {
		--container-page-margin: 1.5rem;
	}
}

.Container-ProductList {
	padding: 0 16.5rem 0 8rem;
}

@media screen and (max-width: $breakpoint-tablet) {
	.Container-ProductList {
		--page-margin: var(--container-page-margin);
		margin: 0 auto;
		padding: 0 var(--page-margin);
	}
}

.Container-Utilitybar {
	padding: 0 2rem;
}

//------------------------------------------------------------------------------
// Container Sections
//------------------------------------------------------------------------------

.ContainerSection {
	--page-margin: var(--container-page-margin);
	--top-margin: var(--margin);
	padding: 0 var(--page-margin);
	padding-bottom: var(--top-margin);
}

// Alternate ContainerSection background
// .ContainerSection:nth-child(even) {
// 	background-color: var(--color-boxed-bg);
//
// 	.ProductImage {
// 		--background-color: var(--color-base-1);
// 	}
// }

.ContainerSection.ContainerSection-Light {
	background-color: var(--color-base-1);
}

.ContainerSection.ContainerSection-Grey {
	background: #F5F5F5;
	padding-top: 3.5rem;
}

.ContainerSection + .ContainerSection {
	padding-bottom: var(--top-margin);
	padding-top: var(--top-margin);
}

.ContainerSection:empty {
	display: none;
}

//------------------------------------------------------------------------------
// Grid
//------------------------------------------------------------------------------

.Grid {
	@include flexbox;
	@include flex-wrap;
	margin: 0 calc(var(--grid-gutter) / 2 * -1);
}

//------------------------------------------------------------------------------
// Column
//------------------------------------------------------------------------------

.Col, [class^=Col-] {
	float: left;
	padding: 0 calc(var(--grid-gutter) / 2);
	position: relative;
}

@include cols(5);
@include cols(12);

.Grid [class*=Col-]:only-child {
	width: 100%;
}

//------------------------------------------------------------------------------
// Grid List
//------------------------------------------------------------------------------

.GridList {
	margin: calc(var(--grid-list-gutter) / 2 * -1);
}

.GridList:not(.flickity-enabled) {
	@include flexbox;
	@include flex-wrap;
}

.GridList .ListItem {
	--item-width: 25%;
	--item-offset: 5%;
	@include flex(0 0 var(--item-width));
	padding: calc(var(--grid-list-gutter) / 2);
	position: relative;
	width: var(--item-width);
}

.GridList-Wide .ListItem {
	--item-width: 20%;
}

.GridList-Narrow .ListItem {
	--item-width: 33.33%;
}

@media screen and (max-width: $breakpoint-desktop) {
	.GridList .ListItem {
		--item-width: 33.33%;
	}
}

@media screen and (max-width: $breakpoint-tablet) {
	.GridList[data-slider="grid-list"] .ListItem {
		--item-width: calc(25% + var(--item-offset));
	}
}

@media screen and (max-width: $breakpoint-mobile-wide) {
	.GridList .ListItem {
		--item-width: 33.33%;
	}

	.GridList[data-slider="grid-list"] .ListItem {
		--item-width: calc(33.33% + var(--item-offset));
	}
}

@media screen and (max-width: $breakpoint-mobile) {
	.GridList .ListItem {
		--item-width: 50%;
	}

	.GridList[data-slider="grid-list"] .ListItem {
		--item-width: calc(50% + var(--item-offset));
	}
}

//------------------------------------------------------------------------------
// ListItem Utility Variations
//------------------------------------------------------------------------------

@media screen and (min-width: $breakpoint-desktop + 1) {
	.GridList.GridListItemSmall .ListItem {
		--item-width: 20%;
	}

	.GridList.GridListItemBig .ListItem {
		--item-width: 25%;
	}
}

//------------------------------------------------------------------------------
// Flex
//------------------------------------------------------------------------------

.Flex {
	@include align-items(center);
	@include flexbox;
	margin-bottom: var(--margin);
	margin-left: calc(var(--grid-gutter) / 2 * -1);
	margin-right: calc(var(--grid-gutter) / 2 * -1);
}

.FlexItem {
	padding-left: calc(var(--grid-gutter) / 2);
	padding-right: calc(var(--grid-gutter) / 2);
}

.FlexItem > :first-child {
	margin-top: 0;
}

.FlexItem > :last-child {
	margin-bottom: 0;
}

.FlexItem-Grow {
	@include flex(1);
}

.FlexSpacer {
	@include flex(1);
}

.FlexItem-Left {
  width: 16.4rem;
}

//------------------------------------------------------------------------------
// Flex Helper Classes
//------------------------------------------------------------------------------

.Flex-NoMargin {
	margin-bottom: 0;
}

.Flex-Wrap {
	@include flex-wrap;
}

.FlexAlign-Start {
	justify-content: flex-start;
}

.FlexAlign-Center {
	justify-content: center;
}

.FlexAlign-End {
	justify-content: flex-end;
}

.FlexAlign-SpaceAround {
	justify-content: space-around;
}

.FlexAlign-SpaceBetween {
	justify-content: space-between;
}

.FlexValign-Start {
	@include align-items(flex-start);
}

.FlexValign-Center {
	@include align-items(flex-start);
}

.FlexValign-End {
	@include align-items(flex-start);
}

@media screen and (max-width: $breakpoint-mobile) {
	.Flex-Collapse {
		display: block;
	}

	.Flex-Collapse .Button {
		display: block;
		width: 100%;
	}

	.Flex-Collapse .FlexItem + .FlexItem {
		margin-top: 10px;
	}

	.Flex-Collapse .Button + .Button {
		margin-top: 10px;
	}
}
