//------------------------------------------------------------------------------
// Align Items
//------------------------------------------------------------------------------

@mixin align-items($value) {
	-moz-flex-align: $value;
	-ms-flex-align: $value;
	-webkit-flex-align: $value;
	-webkit-align-items: $value;
	align-items: $value;
}

//------------------------------------------------------------------------------
// Child Count https://gist.github.com/adamgiese/717969cb38d4b30e1eff3d3abc6472f0
//------------------------------------------------------------------------------

@mixin valid-quantity($quantity) {
	@if type-of($quantity) != 'number' {
		@error 'The "quantity" parameter must be a number!';
	}
	@if not(unitless($quantity)) {
		@error 'The "quantity" parameter must not have a unit!';
	}
	@if $quantity < 0 {
		@error 'The "quantity" parameter must be at least 0!';
	}
}

@mixin has-nth($expression, $element: '*') {
	&:nth-last-child(#{$expression}):first-child,
	&:nth-last-child(#{$expression}):first-child ~ #{$element} {
		@content;
	}
}

@mixin at-least($quantity, $element: '*') {
	@include valid-quantity($quantity);
	@include has-nth('n + #{$quantity}', $element) {
		@content;
	}
}

@mixin at-most($quantity, $element: '*') {
	@include valid-quantity($quantity);
	@include has-nth('-n + #{$quantity}', $element) {
		@content;
	}
}

//------------------------------------------------------------------------------
// Appearance
//------------------------------------------------------------------------------

@mixin appearance($value) {
	-moz-appearance: $value;
	-webkit-appearance: $value;
}

//------------------------------------------------------------------------------
// Box Shadow
//------------------------------------------------------------------------------

@mixin box-shadow($value...) {
	-moz-box-shadow: $value;
	-ms-box-shadow: $value;
	-webkit-box-shadow: $value;
	box-shadow: $value;
}

//------------------------------------------------------------------------------
// Box Sizing
//------------------------------------------------------------------------------

@mixin box-sizing($value) {
	-moz-box-sizing: $value;
	-ms-box-sizing: $value;
	-webkit-box-sizing: $value;
	box-sizing: $value;
}

//------------------------------------------------------------------------------
// Clearfix
//------------------------------------------------------------------------------

@mixin clearfix {
	&:before, &:after {
		content: ' ';
		display: table;
	}

	&:after {
		clear: both;
	}
}

//------------------------------------------------------------------------------
// Cols
//------------------------------------------------------------------------------

@mixin cols($num) {
	@for $i from 1 through $num {
		.Col-#{$i}-#{$num} {
			width: percentage(1 / $num * $i);
		}

		@media screen and (min-width: $breakpoint-desktop + 1) {
			.Col-Push-#{$i}-#{$num} {
				left: percentage(1 / $num * $i);
			}

			.Col-Pull-#{$i}-#{$num} {
				left: percentage(-1 / $num * $i);
			}
		}

		@media screen and (max-width: $breakpoint-desktop) {
			.Col-Desktop-#{$i}-#{$num} {
				width: percentage(1 / $num * $i);
			}
		}

		@media screen and (max-width: $breakpoint-tablet) {
			.Col-Tablet-#{$i}-#{$num} {
				width: percentage(1 / $num * $i);
			}
		}

		@media screen and (min-width: $breakpoint-tablet + 1) {
			.Col-Tablet-Push-#{$i}-#{$num} {
				left: percentage(1 / $num * $i);
			}

			.Col-Tablet-Pull-#{$i}-#{$num} {
				left: percentage(-1 / $num * $i);
			}
		}

		@media screen and (max-width: $breakpoint-mobile-wide) {
			.Col-Mobile-Wide-#{$i}-#{$num} {
				width: percentage(1 / $num * $i);
			}
		}

		@media screen and (min-width: $breakpoint-mobile-wide + 1) {
			.Col-Mobile-Wide-Push-#{$i}-#{$num} {
				left: percentage(1 / $num * $i);
			}

			.Col-Mobile-Wide-Pull-#{$i}-#{$num} {
				left: percentage(-1 / $num * $i);
			}
		}

		@media screen and (max-width: $breakpoint-mobile) {
			.Col-Mobile-#{$i}-#{$num} {
				width: percentage(1 / $num * $i);
			}
		}

		@media screen and (min-width: $breakpoint-mobile + 1) {
			.Col-Mobile-Push-#{$i}-#{$num} {
				left: percentage(1 / $num * $i);
			}

			.Col-Mobile-Pull-#{$i}-#{$num} {
				left: percentage(-1 / $num * $i);
			}
		}
	}
}

//------------------------------------------------------------------------------
// Colspan
//------------------------------------------------------------------------------

@mixin colspan($value) {
	-moz-column-span: $value;
	-ms-column-span: $value;
	-webkit-column-span: $value;
	column-span: $value;
}

//------------------------------------------------------------------------------
// Cover
//------------------------------------------------------------------------------

@mixin cover($position: absolute) {
	bottom: 0;
	left: 0;
	position: $position;
	right: 0;
	top: 0;
}

//------------------------------------------------------------------------------
// Filter
//------------------------------------------------------------------------------

@mixin filter($value) {
	-ms-filter: $value;
	-moz-filter: $value;
	-webkit-filter: $value;
	filter: $value;
}

//------------------------------------------------------------------------------
// Flexbox
//------------------------------------------------------------------------------

@mixin flexbox() {
	display: -webkit-box;
	display: -moz-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
}

//------------------------------------------------------------------------------
// Flex Wrap
//------------------------------------------------------------------------------

@mixin flex-wrap($value: wrap) {
	-webkit-flex-wrap: $value;
	flex-wrap: $value;
}

//------------------------------------------------------------------------------
// Flex
//------------------------------------------------------------------------------

@mixin flex($value) {
	-webkit-box-flex: $value;
	-moz-box-flex: $value;
	-ms-flex: $value;
	-webkit-flex: $value;
	flex: $value;
}

//------------------------------------------------------------------------------
// Horizontal Scroll
//------------------------------------------------------------------------------

@mixin hscrollable {
	white-space: nowrap;
	overflow-y: hidden;
	overflow-x: auto;
	-ms-overflow-style: -ms-autohiding-scrollbar;
	-webkit-overflow-scrolling: touch;
	&::-webkit-scrollbar {
		display: none;
	}
}

//------------------------------------------------------------------------------
// Icon
//------------------------------------------------------------------------------

@mixin icon($icon) {
	@extend %fa-icon;
	@extend #{$fa-style};
	content: fa-content($icon);
}

@mixin icon-before($icon) {
	&:before {
		@include icon($icon);
		margin-right: 0.5em;
	}
}

@mixin icon-after($icon) {
	&:after {
		@include icon($icon);
		margin-left: 0.5em;
	}
}

@mixin icon-replace($icon) {
	font-size: 0;

	&:before {
		@include icon($icon);
		font-size: var(--font-size);
		vertical-align: middle;
	}
}

//------------------------------------------------------------------------------
// Icon Brands
//------------------------------------------------------------------------------

@mixin icon-b($icon) {
	@extend %fa-icon;
	@extend .fab;
	content: fa-content($icon);
}

@mixin icon-b-before($icon) {
	&:before {
		@include icon-b($icon);
		margin-right: 0.5em;
	}
}

@mixin icon-b-after($icon) {
	&:after {
		@include icon-b($icon);
		margin-left: 0.5em;
	}
}

@mixin icon-b-replace($icon) {
	font-size: 0;

	&:before {
		@include icon-b($icon);
		font-size: var(--font-size);
		vertical-align: middle;
	}
}

//------------------------------------------------------------------------------
// Link Colors
//------------------------------------------------------------------------------

@mixin link-colors($bg) {
	a {
		color: best-contrast($bg, (var(--color-link-light), var(--color-link-dark)));
	}

	a:hover {
		color: var(--color-accent-1);
	}
}

//------------------------------------------------------------------------------
// Pull Margins
//------------------------------------------------------------------------------

@mixin pull-margins {
	margin-left: calc(var(--page-margin) * -1);
	margin-right: calc(var(--page-margin) * -1);
	overflow: hidden;
	padding-left: var(--page-margin);
	padding-right: var(--page-margin);
}

//------------------------------------------------------------------------------
// Transform
//------------------------------------------------------------------------------

@mixin transform($value) {
	-moz-transform: $value;
	-ms-transform: $value;
	-webkit-transform: $value;
	transform: $value;
}

//------------------------------------------------------------------------------
// Transition
//------------------------------------------------------------------------------

@mixin transition($value) {
	-moz-transition: $value;
	-ms-transition: $value;
	-webkit-transition: $value;
	transition: $value;
}

//------------------------------------------------------------------------------
// Truncate
//------------------------------------------------------------------------------

@mixin truncate {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}
